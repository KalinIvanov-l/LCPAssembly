; Program to compute the greatest common divisor (GCD) of two numbers a and b
;-----------------------------------------------------------------------
a     EQU   00h     ; 'a' - first number
b     EQU   01h     ; 'b' - second number
temp  EQU   02h     ; temporary variable
;-----------------------------------------------------------------------
      INP           ; Input first number: 'a'
      STORE temp    ; Store 'a' in 'temp' 
L1:   LOAD  temp    ; Read 'a' from 'temp'     
      STORE a       ; Store 'a' in data memory 
      INP           ; Input second number: 'b'
      STORE b       ; Store 'b' in data memory 
; Main loop
L2:   LOAD  a       ; Acc := a
      NOR   #0      ; Complement Acc
      ADD   #1      ; Acc := -'a'
      ADD   b       ; Acc := 'b' - 'a'
      JCC   L3      ; Branch if 'ï¿½' > 'b'
; a <= b
      STORE b       ; 'b' := 'b' - 'a'
      ADD   #FFh    ; Acc := Acc - 1
      JCC   L4      ; Exit if 'a' = 'b'
      JCC   L2      ; Next iteration
; a > b
L3:   NOR   #0      ; Complement Acc
      ADD   #1      ; Acc := 'a' - 'b'
      STORE a       ; 'a' := 'a' - 'b'
      JCC   L2      ; Next iteration
; End of main loop
L4:   LOAD  a       ; Acc := 'a' (result)
      OUTP          ; Output the result
      JCC   L1      ; Jump to compute GCD with a new value of 'b'
